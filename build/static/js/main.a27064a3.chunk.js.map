{"version":3,"sources":["api/apiClient.js","api/urineAnalysis.js","components/Login/LogIn.js","mockdata/data.js","components/Diet/DietInput.jsx","components/Diet/DietItem.jsx","components/Diet/DietList.jsx","api/backend.js","components/Diet/Diet.jsx","components/DashBoard/DashBoard.js","validations/validations.js","components/Register/Register.js","ProtectedRoute.js","components/Page404/Page404.js","components/Profile/profile.jsx","App.js","serviceWorker.js","index.js"],"names":["axiosClient","axios","create","baseURL","headers","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getPredictedPH","_ref4","_asyncToGenerator","_callee4","dietList","_context4","post","_x4","apply","arguments","login","_ref5","_callee5","credentials","_context5","console","log","_x5","LoginForm","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","history","useHistory","_useState5","_useState6","handleSubmit","_ref","_callee","event","body","response","userObj","_context","preventDefault","data","statusCode","userName","firstName","lastName","isUserLoggedIn","localStorage","setItem","JSON","stringify","pathname","loggedInUserObj","ToastsStore","t0","_x","React","createElement","className","id","role","aria-labelledby","onSubmit","onChange","target","Link","to","DietInput","addDiet","foodName","setFoodName","quantity","setQuantity","temperature","_useState7","initialValues","datetime","Date","map","placeholder","text","DietItem","diet","style","display","gap","DietList","generateDietList","con","require","createConnection","host","process","RDS_HOSTNAME","user","RDS_USERNAME","RDS_PASSWORD","port","RDS_PORT","handler","query","Diet","props","setDietList","updatedValues","_objectSpread","item","Number","predicted_urine_ph","tempDietList","onClick","_","DashBoard","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","onLogoutYes","setState","submit","toggle","parse","getItem","get","onLogout","logout","board","boardItem","_createClass","loggedInUserName","this","location","localUname","concat","src","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Redirect","SweetAlert","warning","showCancel","confirmBtnText","confirmBtnBsStyle","title","onConfirm","onCancel","focusCancelBtn","Component","validateName","field","test","validatePassword","passwordValue","Register","Formik","cpassword","validate","errors","actions","setSubmitting","base64","encode","success","resetForm","touched","handleChange","onBlur","handleBlur","ToastsContainer","store","position","ToastsContainerPosition","TOP_RIGHT","ProtectedRoute","component","rest","_objectWithoutProperties","_excluded","Route","assign","render","userNameKey","Page404","class","ProfileSelectionPage","_location$state","useLocation","flexWrap","alignItems","justifyContent","flexDirection","height","avatar","profile","handleProfileSelect","cursor","width","borderRadius","marginRight","App","Router","Switch","path","exact","LogIn","Boolean","window","hostname","match","app","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a27064a3.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// const apiKey = process.env.REACT_APP_APIKEY;\n\nexport const axiosClient = axios.create({\n    baseURL: `https://yfvutft2q2.execute-api.us-east-1.amazonaws.com/prod`,\n    headers: {\n        \"Content-Type\": \"application/json\",\n        // \"x-api-key\": apiKey,\n    },\n    // withCredentials: false\n})","import { axiosClient } from \"./apiClient\";\n\nexport const loginUser = async (username, password) => {\n  return await axiosClient.post(\"/users/login\", null, {\n    params: {\n      username,\n      password,\n    },\n  });\n};\n\nexport const getAllUrineAnalysisResults = async () => {\n  return await axiosClient.get(\"/urine_analysis\");\n};\n\nexport const postDiet = async (dietList) => {\n  console.log(\"This dietlist posted\", dietList);\n  return await axiosClient.post(\"/insertUrine\", dietList);\n};\n\nexport const getPredictedPH = async (dietList) => {\n  return await axiosClient.post(\"/predictph\", dietList);\n};\n\nexport const login = async (credentials) => {\n  console.log(\"These are credentials\", credentials)\n  return await axiosClient.post(\"/login\", credentials);\n};\n","import React, { useState } from \"react\";\nimport { login } from \"../../api/urineAnalysis\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport {\n  ToastsContainer,\n  ToastsStore,\n  ToastsContainerPosition,\n} from \"react-toasts\";\n\nfunction LoginForm() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const [loggedInUserObj, setLoggedInUserObj] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const body = {\n      username: username,\n      password: password,\n    };\n\n    try {\n      const response = await login(body);\n      console.log(\"This is response\", response);\n\n      if (response.data.statusCode === 200) {\n        console.log(\"Success logging in\");\n        const userObj = {\n          userName: username,\n          firstName: response.data.firstName,\n          lastName: response.data.lastName,\n          isUserLoggedIn: true,\n        };\n        localStorage.setItem(username, JSON.stringify(userObj));\n        //setLoggedInUserObj(userObj);\n        history.push({\n          pathname: \"/profiles\",\n          state: { loggedInUserObj: userObj, userName: username },\n        });\n      } else {\n        console.error(\"Error logging in\");\n        ToastsStore.error(\"Invalid Username/Password.\");\n\n      }\n    } catch (error) {\n      console.error(\"Error logging in\", error);\n      ToastsStore.error(\"Invalid Username/Password.\");\n    }\n  };\n\n  return (\n    <div className=\"container mt-2 mb-4 divMiddle\">\n      <div className=\"col-sm-8 ml-auto mr-auto\">\n        <h1 className=\"display-5 text-center pb-5\">\n          Watch what you eat, or you'll end up wearing it!\n        </h1>\n        <div\n          className=\"tab-content col-sm-6 ml-auto mr-auto\"\n          id=\"pills-tabContent\"\n        >\n          <div\n            className=\"tab-pane fade show active\"\n            id=\"pills-signin\"\n            role=\"tabpanel\"\n            aria-labelledby=\"pills-signin-tab\"\n          >\n            <div className=\"col-sm-12 border border-primary shadow rounded pt-2\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label className=\"font-weight-bold\">\n                    Username <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    value={username}\n                    onChange={(event) => setUsername(event.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"font-weight-bold\">\n                    Password <span className=\"text-danger\">*</span>\n                  </label>\n                  <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(event) => setPassword(event.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"row\">\n                    <div className=\"col text-right\">\n                      {\" \"}\n                      <Link to={\"/register\"}>Create Account</Link>{\" \"}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"submit\"\n                    name=\"submit\"\n                    value=\"Sign In\"\n                    className=\"btn btn-block btn-primary\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","export default {\n  \"Gym\": 0,\n  \"Liquid\": 0,\n  \"Lemon water\": 0,\n  \"Tea(black/green)\": 0,\n  \"Fruit tea\": 0,\n  \"Water\": 0,\n  \"Latte\": 0,\n  \"Mineral water (Esentuki - 4)\": 0,\n  \"Mineral water (Borjomi)\": 0,\n  \"Mineral water (Prolom)\": 0,\n  \"Tequila\": 0,\n  \"Red wine\": 0,\n  \"White wine\": 0,\n  \"Strong alcohol\": 0,\n  \"Beer\": 0,\n  \"Morse\": 0,\n  \"Milk\": 0,\n  \"Orange juice\": 0,\n  \"Oatmeal\": 0,\n  \"Pizza with meat\": 0,\n  \"Cheese Pizza\": 0,\n  \"Cheesecakes\": 0,\n  \"Scrambled eggs\": 0,\n  \"Mayonnaise salad\": 0,\n  \"Bread\": 0,\n  \"Meat\": 0,\n  \"Sauce\": 0,\n  \"Cutlet\": 0,\n  \"Sausage\": 0,\n  \"Fish\": 0,\n  \"Sushi\": 0,\n  \"Cod liver\": 0,\n  \"Cheese\": 0,\n  \"Curd\": 0,\n  \"Sour cream\": 0,\n  \"Buckwheat porridge\": 0,\n  \"Noodles with vegetables\": 0,\n  \"Noodles with shrimp\": 0,\n  \"Meat pilaf\": 0,\n  \"Meatless pilaf\": 0,\n  \"Pea soup with meat\": 0,\n  \"Fried vegetables\": 0,\n  \"Pyagse with vegetables\": 0,\n  \"Dumplings with cabbage\": 0,\n  \"Potato dumplings\": 0,\n  \"Zucchini Fritters\": 0,\n  \"Stewed cabbage\": 0,\n  \"Solyanka with meat\": 0,\n  \"Eggplant with cheese\": 0,\n  \"Pasta\": 0,\n  \"Fried potatoes\": 0,\n  \"Cooked Potatoes\": 0,\n  \"Braised Potatoes\": 0,\n  \"Mashed potatoes\": 0,\n  \"Apple Pie\": 0,\n  \"Patty with cabbage\": 0,\n  \"Curd Pie\": 0,\n  \"Cheese Pie\": 0,\n  \"Egg Pie\": 0,\n  \"Potato pie\": 0,\n  \"Meat pie\": 0,\n  \"Khachapuri\": 0,\n  \"The nuts\": 0,\n  \"Pumpkin seeds\": 0,\n  \"Raisins\": 0,\n  \"Dried apricots\": 0,\n  \"Vegetable salad\": 0,\n  \"Eggplant caviar\": 0,\n  \"The vinaigrette\": 0,\n  \"Peach\": 0,\n  \"Melon\": 0,\n  \"Plum\": 0,\n  \"Tangerines\": 0,\n  \"Pear\": 0,\n  \"Watermelon\": 0,\n  \"Banana\": 0,\n  \"Grapes\": 0,\n  \"Pineapple\": 0,\n  \"Orange\": 0,\n  \"Paste\": 0,\n  \"Kumquat\": 0,\n  \"Ice cream\": 0,\n  \"Cookie\": 0,\n  \"Cake\": 0,\n  \"Bun\": 0,\n  \"Croissant\": 0,\n  \"Chocolate\": 0,\n  \"Candies\": 0,\n  \"Halva\": 0,\n  \"Marshmallow\": 0,\n  \"Red caviar\": 0,\n  \"Jelly\": 0\n}\n","import React, { useState } from 'react'\nimport data from '../../mockdata/data'\n\nconst DietInput = ({ addDiet }) => {\n    const [foodName, setFoodName] = useState('')\n    const [quantity, setQuantity] = useState(0)\n    const [temperature, setTemperature] = useState(0)\n    const[ initialValues] = useState(data)\n\n\n    const handleFoodNameChange = (event) => { setFoodName(event.target.value) }\n    const handleQuantityChange = (event) => { setQuantity(event.target.value) }\n    const handleTempChange = (event) => { setTemperature(event.target.value) }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n\n        addDiet({\n            foodName,\n            quantity,\n            temperature,\n            datetime: new Date()\n        })\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* <input\n                type=\"text\"\n                placeholder='Food name'\n                value={foodName}\n                onChange={handleFoodNameChange}\n            /> */}\n            <select value={foodName} onChange={handleFoodNameChange}>\n                <option value=\"\">Select a food name</option>\n                {Object.keys(initialValues).map((name) => (\n                    <option key={name} value={name}>\n                        {name}\n                    </option>\n                ))}\n            </select>\n            <input\n                type=\"number\"\n                placeholder='Quantity'\n                value={quantity}\n                onChange={handleQuantityChange}\n            />\n            {/* <input\n                type=\"number\"\n                placeholder='Temperature'\n                value={temperature}\n                onChange={handleTempChange}\n            /> */}\n            <input type=\"submit\" text=\"Add\" />\n        </form>\n    )\n}\n\nexport default DietInput","import React, { useState } from 'react'\n\nconst DietItem = ({ diet }) => {\n    const { foodName, quantity, temperature } = diet\n    return (\n        <div style={{\n            display: \"flex\",\n            gap: \"25px 10px\"\n        }}>\n            <span>{foodName}</span>\n            <span>{quantity}</span>\n            <span>{temperature} Celsius</span>\n        </div>\n    )\n}\n\nexport default DietItem","import React, { useState } from 'react'\nimport DietItem from './DietItem'\n\n// create a language selector component\n// implement handleLanguageSelect function\nconst DietList = ({ dietList }) => {\n    const generateDietList = dietList => {\n        return dietList.map(diet => <DietItem diet={diet} key={diet} />)\n    }\n\n    return (\n        <div>\n            {generateDietList(dietList)}\n        </div>\n    )\n}\n\nexport default DietList","const mysql = require(\"mysql\");\nconst con = mysql.createConnection({\n  host: process.env.RDS_HOSTNAME,\n  user: process.env.RDS_USERNAME,\n  password: process.env.RDS_PASSWORD,\n  port: process.env.RDS_PORT,\n});\nexports.handler = async (event) => {\n  con.query(\"CREATE DATABASE mysqllab\", function (err, result) {\n    if (err) throw err;\n    console.log(\"Database created\");\n  });\n  return \"Database Created\";\n};\n","import React, { useState } from 'react'\nimport DietInput from './DietInput'\nimport DietList from './DietList'\nimport { postDiet } from '../../api/urineAnalysis'\nimport { getPredictedPH } from '../../api/urineAnalysis'\nimport insert from '../../api/backend';\nimport data from '../../mockdata/data'\n\n\nconst Diet = (props) => {\n    const [dietList, setDietList] = useState([])\n    const[ initialValues] = useState(data)\n\n    const updatedValues = {...initialValues};\n\n    dietList.forEach(item => {\n        if (updatedValues.hasOwnProperty(item.foodName)) {\n          updatedValues[item.foodName] += Number(item.quantity);\n        }\n      });\n      \n    const addDiet = (diet) => {\n        let tempDietList = dietList.slice()\n        tempDietList.push(diet)\n        setDietList(tempDietList)\n    }\n\n    const handleSubmit = async () => {\n        if (dietList.length == 0)\n            return console.error('Diet list is empty!')\n        try {\n            //await postDiet(dietList)\n            let response = await getPredictedPH(updatedValues)\n            console.log(\"This is predicted PH\",response.data.predicted_urine_ph)\n            //console.log(\"This is after initValues\",updatedValues)\n            //console.log(\"This is dietlist\",dietList)\n        } catch (eInfo) {\n            console.error(eInfo)\n        }\n    }\n\n    return (\n        <div>\n            <DietInput addDiet={addDiet} />\n            <DietList dietList={dietList} />\n            <button onClick={handleSubmit}>Submit</button>\n        </div>\n    )\n}\n\nexport default Diet","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Diet from \"../Diet/Diet\";\n\nconst _ = require(\"lodash\");\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.name,\n      board: [],\n      boardItem: \"\",\n      toggle: false,\n      submit: true,\n      logout: false,\n      loggedInUserObj: {},\n    };\n  }\n\n  onLogoutYes = () => {\n    this.setState({ submit: false });\n    this.setState({ toggle: true });\n    const userObj = JSON.parse(\n      localStorage.getItem(_.get(this.state.loggedInUserObj, \"userName\", \"\"))\n    );\n    userObj.isUserLoggedIn = false;\n    localStorage.setItem(\n      _.get(this.state.loggedInUserObj, \"userName\", \"\"),\n      JSON.stringify(userObj)\n    );\n  };\n\n  onLogout = () => {\n    this.setState({\n      logout: !this.state.logout,\n    });\n  };\n\n  componentDidMount() {\n    const loggedInUserName = _.get(this.props.location, \"state.userName\", {});\n    this.setState({\n      loggedInUserObj: JSON.parse(localStorage.getItem(loggedInUserName)),\n    });\n  }\n\n  render() {\n    const localUname = `${_.get(\n      this.state.loggedInUserObj,\n      \"firstName\",\n      \"\"\n    )} ${_.get(this.state.loggedInUserObj, \"lastName\", \"\")}`;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark static-top\">\n          <div className=\"container\">\n            <img src=\"./logo.png\" alt=\"\" className=\"rotate\" />\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarResponsive\"\n              aria-controls=\"navbarResponsive\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li\n                  className=\"nav-item active text-right\"\n                  onClick={this.onLogout}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={this.onLogout}\n                  >\n                    LOGOUT\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container\">\n          <h1 className=\"mt-4\">HELLO {localUname}</h1>\n          {/* <p>Key in your diet here</p> */}\n          <Diet />\n        </div>\n        {!this.state.submit ? <Redirect to={`/`} /> : null}\n        {this.state.logout ? (\n          <SweetAlert\n            warning\n            showCancel\n            confirmBtnText=\"Yes\"\n            confirmBtnBsStyle=\"danger\"\n            title=\"Are you sure?\"\n            onConfirm={this.onLogoutYes}\n            onCancel={this.onLogout}\n            focusCancelBtn\n          ></SweetAlert>\n        ) : (\n          \"\"\n        )}\n\n        {/* <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n          <a className=\"navbar-brand\" href=\"#\">\n            Navbar\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#collapsibleNavbar\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Link\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <br />\n\n        <div className=\"container\">\n          <h3>Collapsible Navbar</h3>\n          <p>\n            In this example, the navigation bar is hidden on small screens and\n            replaced by a button in the top right corner (try to re-size this\n            window).\n          </p>\n          <p>\n            Only when the button is clicked, the navigation bar will be\n            displayed.\n          </p>\n          <p>\n            Tip: You can also remove the .navbar-expand-md className to ALWAYS\n            hide navbar links and display the toggler button.\n          </p>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default DashBoard;\n","const validateName = (value, field) => {\n  if (!value) {\n    return \"Required\";\n  } else if (!/^[A-Za-z]+$/i.test(value)) {\n    return `Invalid ${field}`;\n  }\n};\nconst validatePassword = (value, field, passwordValue) => {\n  if (!value) {\n    return \"Required\";\n  } else if (value.length > 6 || value.length < 6) {\n    return \"6 characters only allowed\";\n  } else if (field === \"cpassword\" && value !== passwordValue) {\n    return \"Passwords do not match.\";\n  }\n};\n\nexport default validateName;\n\nexport { validateName, validatePassword };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport {\n  ToastsContainer,\n  ToastsStore,\n  ToastsContainerPosition,\n} from \"react-toasts\";\nimport base64 from \"react-native-base64\";\nimport { validateName, validatePassword } from \"../../validations/validations\";\n\nclass Register extends React.Component {\n  render() {\n    return (\n      <div>\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            userName: \"\",\n            password: \"\",\n            cpassword: \"\",\n          }}\n          validate={(values) => {\n            const errors = {};\n\n            errors.firstName =\n              validateName(values.firstName, \"First Name\") || null;\n            errors.lastName =\n              validateName(values.lastName, \"Last Name\") || null;\n            errors.userName =\n              validateName(values.userName, \"User Name\") || null;\n            errors.password =\n              validatePassword(values.password, \"password\") || null;\n            errors.cpassword =\n              validatePassword(\n                values.cpassword,\n                \"cpassword\",\n                values.password\n              ) || null;\n\n            for (var key in errors) {\n              if (errors[key] !== null) return errors;\n            }\n            return true;\n          }}\n          onSubmit={(values, actions) => {\n            actions.setSubmitting(false);\n\n            if (!localStorage.getItem(values.userName)) {\n              localStorage.setItem(\n                values.userName,\n                JSON.stringify({\n                  firstName: values.firstName,\n                  lastName: values.lastName,\n                  userName: values.userName,\n                  password: base64.encode(values.password),\n                  isUserLoggedIn: false,\n                })\n              );\n\n              ToastsStore.success(\"User registered successfully.\");\n              actions.resetForm();\n            } else {\n              ToastsStore.error(\"Username is already exists.\");\n            }\n          }}\n        >\n          {(props) => (\n            <div className=\"container mt-2 mb-4 divMiddle\">\n              <div className=\"col-sm-4 ml-auto mr-auto\">\n                <div className=\"tab-content\" id=\"pills-tabContent\">\n                  <div\n                    className=\"tab-pane fade show active\"\n                    id=\"pills-signup\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"pills-signup-tab\"\n                  >\n                    <div className=\"col-sm-12 border border-primary shadow rounded pt-2\">\n                      <div className=\"text-center\">\n                        <img\n                          src=\"./logo.png\"\n                          className=\"rounded-circle border p-1 rotate\"\n                          alt=\"\"\n                        />\n                      </div>\n                      <form onSubmit={props.handleSubmit}>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            First Name <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.firstName &&\n                                props.touched.firstName &&\n                                props.errors.firstName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Enter First Name\"\n                            name=\"firstName\"\n                            className=\"form-control\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.firstName}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Las Name <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.lastName &&\n                                props.touched.lastName &&\n                                props.errors.lastName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Enter Last Name\"\n                            name=\"lastName\"\n                            className=\"form-control\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.lastName}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            User Name <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.userName &&\n                                props.touched.userName &&\n                                props.errors.userName}\n                            </span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Enter User Name\"\n                            name=\"userName\"\n                            className=\"form-control\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.userName}\n                          />\n                          <div className=\"text-danger\">\n                            <em>This will be your login name!</em>\n                          </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Password <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.password &&\n                                props.touched.password &&\n                                props.errors.password}\n                            </span>\n                          </label>\n                          <input\n                            type=\"password\"\n                            name=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"***********\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.password}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"font-weight-bold\">\n                            Confirm Password{\" \"}\n                            <span className=\"text-danger\">*</span>\n                            <span className=\"errorMsg\">\n                              {props.errors.cpassword &&\n                                props.touched.cpassword &&\n                                props.errors.cpassword}\n                            </span>\n                          </label>\n                          <input\n                            type=\"password\"\n                            name=\"cpassword\"\n                            className=\"form-control\"\n                            placeholder=\"***********\"\n                            onChange={props.handleChange}\n                            onBlur={props.handleBlur}\n                            value={props.values.cpassword}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label>\n                            <p>\n                              Already have an account?{\" \"}\n                              <Link to={\"/\"}>Sign In</Link>{\" \"}\n                            </p>\n                          </label>\n                        </div>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"submit\"\n                            name=\"signupsubmit\"\n                            value=\"Sign Up\"\n                            className=\"btn btn-block btn-primary\"\n                          />\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Formik>\n        <ToastsContainer\n          store={ToastsStore}\n          position={ToastsContainerPosition.TOP_RIGHT}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nfunction requireAuth(userNameKey) {\n  return JSON.parse(localStorage.getItem(userNameKey)).isUserLoggedIn;\n}\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (\n          _.get(props.location, \"state.userName\") &&\n          requireAuth(props.location.state.userName)\n        ) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Page404 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submit: false,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"container divMiddle\">\n          <div class=\" text-center col-sm-8 ml-auto mr-auto\">\n            <div class=\"col-lg-6 offset-lg-3 col-sm-6 offset-sm-3 col-12 p-3 error-main\">\n              <div class=\"row\">\n                <div class=\"col-lg-8 col-12 col-sm-10 offset-lg-2 offset-sm-1\">\n                  <h1 class=\"m-0\">404</h1>\n                  <h6>Page not found</h6>\n                  <p>\n                    <Link to={\"/\"}>\n                      <button type=\"button\" class=\"btn btn-success\">\n                        Go Back\n                      </button>\n                    </Link>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Page404;\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport './ProfileSelection.css'; // Import the CSS file\n\nconst ProfileSelectionPage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { userName, loggedInUserObj } = location.state;\n\n\n\n  // define profiles array (can be fetched from API or database)\n  const profiles = [\n    { name: \"John\", avatar: \"https://images.unsplash.com/photo-1593085512500-5d55148d6f0d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8Y2FydG9vbnxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60\" },\n    { name: \"Sarah\", avatar: \"https://images.unsplash.com/photo-1578632749014-ca77efd052eb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fGFuaW1lfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60\" },\n    { name: \"Alex\", avatar: \"https://images.unsplash.com/photo-1611457194403-d3aca4cf9d11?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=686&q=80\" },\n  ];\n\n  // handle profile selection\n  const handleProfileSelect = (profile) => {\n    // save selected profile to localStorage or server\n    console.log(`Selected profile: ${profile.name}`);\n    console.log(\"from login \" + { userName }, { loggedInUserObj })\n    const userObj = {\n      userName: userName,\n      firstName: profile.name,\n      isUserLoggedIn: true,\n    };\n    localStorage.setItem(loggedInUserObj.userName, JSON.stringify(userObj));\n    history.push({\n      pathname: \"/dashboard\",\n      state: { userName: loggedInUserObj.userName },\n    });\n  };\n\n  return (\n    <div className=\"profile-selection-page\"\n      style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', height: '100vh' }}\n    >\n      <h1>Select your profile</h1>\n      <div className=\"profiles-list\"\n        style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }} >\n        {profiles.map((profile) => (\n          <div\n            className=\"profile-item\"\n            key={profile.name}\n            onClick={() => handleProfileSelect(profile)}\n          >\n            <img src={profile.avatar} alt={profile.name} style={{ cursor: \"pointer\", width: '200px', height: '200px', borderRadius: '50%', marginRight: '10px' }} />\n            <p>{profile.name}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileSelectionPage;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport LogIn from \"./components/Login/LogIn\";\nimport DashBoard from \"./components/DashBoard/DashBoard\";\nimport Register from \"./components/Register/Register\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport Page404 from \"./components/Page404/Page404\";\nimport ProfileSelectionPage from \"./components/Profile/profile\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LogIn} />\n          <Route path=\"/register\" exact component={Register} />\n          <ProtectedRoute exact path=\"/dashboard\" component={DashBoard} />\n          <Route path=\"/profiles\" component={ProfileSelectionPage} />\n          <Route path=\"*\" component={Page404} />\n          \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nconst app = (<BrowserRouter>\n    <App></App>\n</BrowserRouter>)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}